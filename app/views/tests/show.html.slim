
.absolute-right.flex-row
  = link_to material_icon.get_app.md_24, test_path(@test, format: :json), title: t(:export_title)
  = link_to material_icon.content_copy.md_24, copy_test_path(@test), title: t(:duplicate_title)
  = link_to material_icon.edit.md_24, edit_test_path(@test), title: t(:edit_title) if @test.edit?
  = link_to material_icon.delete.md_24, @test, data: { confirm: 'Are you sure?' }, method: :delete, title: t(:delete_title)


#timeline
  ul
    - Test::ALL_EVENTS.each do |event|
      li
        - if @test.send("#{event}?")
          span(class='active') = t("to_#{event}")
        - else
          = link_to t("to_#{event}"), { controller: 'tests', action: "to_#{event}", id: @test.id }, class: !@test.send("can_to_#{event}?") ? 'disabled' : '', title: t("#{event}_description")

p.small
  = @test.description

h5 = t(:part_plural)

.flex-row
  - @test.parts.each do |part|
    .part.card.col
      .card-header
        strong = part.name
      .card-body
        p.small
          = part.description
        p
          = "#{t(:variable_plural)}: [ #{part.variables_to_s} ]"
      .card-footer
        label = t("test/part.access_token")
        input.u-full-width type="text" value=part.access_token readonly="true"
br

/ - prev_part = false
/ .row
/   - @grouped_by_variable.each do |variable, values|
/     - part = variable.part
/     .data
/       - if part != prev_part
/         strong = "#{variable.part}"
/         br
/       strong = "#{variable.name}: "
/       span = values.map {|val| val.target.value }.join(', ')
/     - prev_part = part

h5 = t(:values)

- if @grouped_by_variable.present?

  = form_tag(@test, method: :get, class: 'query-form', id: 'boxplot-from') do
    label = t(:target_variable)
    = select_tag('target_var_name', options_for_select(@target_vars, params[:target_var_name]), prompt: t(:prompt_label))

    label = t(:filter_variable)
    = select_tag('filter_var_name', options_for_select(@filter_vars, params[:filter_var_name]), prompt: t(:prompt_label))

    .filter-values
      label = t(:filter_variable_values)
      #values
        - @filter_vars.each do |name|
          = select_tag('filter_var_values[]', options_for_select(@filter_values[name]), prompt: t(:prompt_label), id: "#{name}-options")
      button.button#add-values-btn Add next value


    label.form-check-label
      = check_box_tag('logarithm', true, params[:logarithm])
      = t(:positive_skewed_data)

    = submit_tag('Show', name: nil, class: 'button-primary')

    javascript:
      var filter_var_select = $('#filter_var_name');
      function toggleOptions() {
        var name = filter_var_select.val();
        if (name != "") {
          $('.filter-values').show();
          // hide all
          $("[id $= '-options']").hide();
          // show only one
          $(`#${name}-options`).show();
        } else {
          $('.filter-values').hide();
        }
      }

      filter_var_select.change(toggleOptions);
      toggleOptions();

      $('#add-values-btn').click(function(e) {
        var name = filter_var_select.val();
        var new_options = $(`#${name}-options`).clone();
        new_options.val("");
        $('#values').append(new_options);
        return false;
      });

    - if @boxplot_data
      #box-charts.card
          == render partial: 'chart_settings', locals: { parent_id: 'box-charts', chart_id: 'boxplot' }
          .card-header
            strong Confidence intervals
            .card-actions
              a.settings Settings
              a.download Save
          .card-body style="position: relative; height:340px;"

      javascript:
        var boxplotData = #{{ JSON.dump(@boxplot_data) }};
        if (boxplotData) {
          drawBoxplot(boxplotData);
        }

    h5 Control variables data
    = form_tag(@test, method: :get, class: 'query-form', id: 'histogram-form') do
      = select_tag('chart_variable', grouped_options_for_select(@grouped_variables, params[:chart_variable], prompt: t(:prompt_label)))
      = submit_tag('Show', name: nil, class: 'button-primary')

    - if @histogram_data
      #histogram-container.card
        == render partial: 'chart_settings', locals: { parent_id: 'histogram-container', chart_id: 'histogram' }
        .card-header
          strong Histogram
          .card-actions
            a.settings Settings
            a.download Save
        .card-body style="position: relative; height:240px;"

      javascript:
        var histogramData = #{{ JSON.dump(@histogram_data) }};
        if (histogramData) {
          drawHistogram(histogramData[0], histogramData[1]);
        }

- else
  p.no-content No data.

